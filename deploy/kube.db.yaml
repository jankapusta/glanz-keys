apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ${BASE_NAME}-mongodata
  namespace: ${NAMESPACE}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
status: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: glanz-mongo
  name: ${GLANZ_MONGO_HOST}
  namespace: ${NAMESPACE}
spec:
  ports:
  - name: mongo
    port: ${GLANZ_MONGO_PORT}
    targetPort: ${GLANZ_MONGO_PORT}
  selector:
    app: ${BASE_NAME}-api
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: glanz-mongo
  namespace: ${NAMESPACE}
spec:
  selector:
    matchLabels:
      app: ${BASE_NAME}-api
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: ${BASE_NAME}-api
    spec:
      containers:
      - name: mongo-container
        image: mongo:3.6
        ports:
        - containerPort: ${GLANZ_MONGO_PORT}
        resources: {}
        volumeMounts:
        - mountPath: /data/db
          name: ${BASE_NAME}-mongodata
      restartPolicy: Always
      volumes:
      - name: ${BASE_NAME}-mongodata
        persistentVolumeClaim:
          claimName: ${BASE_NAME}-mongodata
status: {}